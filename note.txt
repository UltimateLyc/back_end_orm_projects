ORM => Object Relational Mapping
JSORM => JavaScrip Object Relational Mapping

// 1.instalamos node
npm init

// 2. instalamos las siguientes dependencias
npm i express morgan pg pg-hstore sequelize nodemon

// 3. creamos las carpetas base 
    => src
        => controlles
        => database
            => database.js
        => models
            =>Project.js
        => routes
        => index.js
        => app.js

// 4. Configurasmos el archivo app.js
    import express, { application } from 'express'

    const app = express() // manda llamar a ejecutar express para crear el server

    app.use(express.json()) // Nos permite recibir informacion atravez de archivos JSON

    export default app


// 5. Configuramos index.js
    import app from './app.js'
    import { sequelize } from './database/databese.js'

    async function main() {
        try {
            await sequelize.sync() // Sincroniza el codigo con lo que har en la base de datos
            await sequelize.authenticate() // Verrifica que nos podamos conectar a la bd
            console.log('Conexion a la base correcta')
            app.listen(3000)
        console.log('Server ON')
        } catch (error) {
            console.log(error)
        }
    }

main()


// 6. modificamos packege.json
    "main": "index.js",
    Agregamos => "type": "module",
       "scripts": {
            "dev": "nodemon src/index.js"
  },

// 7. modificamos database.js
    import Sequelize from 'sequelize'

    export const sequelize = new Sequelize(
        'projectsdb',
        'postgres',
        'root',
        {
            host: 'localhost',
            dialect: 'postgres'
        }
    )





    /******************************************

,
  "devDependencies": {
    "standard": "^17.0.0"
  },
  "eslintConfig": {
    "extends":[
      "./node_modules/standard/eslintrc.json"
    ]
  }
